<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserDao">

<!-- DB주소정리 위한 주소 조회(널제외, 공백인경우는 로직에서 분기) -->
<select id="selectAddAll" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_id,
		user_address
	FROM
		sh86.sh_user
	WHERE
		user_address IS NOT NULL
</select>

<!-- 회원정보 도이름, 시이름 수정 -->
<update id="updateDoAndCity" parameterType="kr.co.sh86.user.domain.User">
	UPDATE sh86.sh_user
	SET 
		user_do = #{userDo},
		user_cityname = #{userCityName}
	WHERE
		user_id = #{userId}
</update>

<!-- 모든회원정보조회 -->
<select id="selectAllUser" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM
		SH86.SH_USER
	ORDER BY user_name
</select>

<!-- 휴대폰번호 있는 사용자 카운트 -->
<select id="selectCountByHp" parameterType="String" resultType="int">
	SELECT
		COUNT(*)
	FROM
		SH86.SH_USER
	WHERE
		USER_ID LIKE #{userId}||'%'
	AND 
		USER_HP IS NOT NULL
</select>

<!-- 한번이상 접속한 회원 카운팅 -->
<select id="selectCountByJoin" parameterType="String" resultType="int">
	SELECT
		COUNT(*)
	FROM
		SH86.SH_USER
	WHERE
		USER_JOINCHECK > 0
	AND
		USER_ID LIKE #{userId}||'%'
</select>

<!-- 반별 전체카운트 -->
<select id="selectTotalCountByClass" parameterType="String" resultType="int">
	SELECT
		COUNT(*)
	FROM
		SH86.SH_USER
	WHERE
		USER_ID LIKE #{userId}||'%'
</select>

<!-- 반별 핸드폰보유자수 -->
<select id="selectHpCountByClass" parameterType="String" resultType="int">
	SELECT
		COUNT(*)
	FROM
		SH86.SH_USER
	WHERE
		USER_ID LIKE #{userId}||'%'
	AND 
		USER_HP IS NOT NULL
</select>

<!-- 모든공지사항 조회 -->
<select id="selectAllNotice" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.no_num,
		no.no_subject,
		no.no_writer,
		no.no_regdate,
		no.no_type,
		no.no_contentnum,
		no.user_id,
		no.no_contents,
		no.no_targetclass,
		no.no_targetname,
		no.no_user_hp
	FROM
		SH86.SH_NOTICE no
</select>

<!-- 부의공지내용 조회 -->
<select id="selectNoticeContent" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*,
		co.*
	FROM
		SH86.SH_CONTENT co,
		SH86.SH_NOTICE no
	WHERE
		co.co_num = no.no_contentnum
	AND
		co.co_num = #{noContentNum}
	AND 
		no.no_type = 1
</select>

<!-- 행사공지내용 조회 -->
<select id="selectNoticeEvent" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*,
		ev.*
	FROM
		SH86.SH_EVENT ev,
		SH86.SH_NOTICE no
	WHERE
		ev.co_num = no.no_contentnum
	AND 
		ev.co_num = #{noContentNum}
	AND 
		no.no_type = 2
</select>

<!-- 행사공지내용 조회 -->
<select id="selectNoticeEventForJoin" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*,
		ev.*
	FROM
		SH86.SH_EVENT ev,
		SH86.SH_NOTICE no
	WHERE
		ev.co_num = no.no_contentnum
	AND
		ev.no_num = no.no_num
	AND
		no.no_num = #{noNum}
	AND 
		no.no_type = 2
</select>

<!--신보  -->
<select id="selectSinboRes" parameterType="int" resultType="kr.co.sh86.user.domain.SinboDb">
	SELECT
		mem_id
	FROM 
		kis_2017.jjac_survey004
	WHERE
		mem_id > 599
	
</select>

<select id="selectSinbo" parameterType="int" resultType="kr.co.sh86.user.domain.Sinbo">
	SELECT 
		sb_num,
		sb_company,
		sb_dateofest,
		sb_ceo,
		sb_rrn,
		sb_add,
		sb_branch,
		sb_josaja,
		sb_hp,
		sb_upstream
	FROM
		ADMIN.SINBO
	WHERE
		sb_num = #{memId}
</select>

<update id="updateSinbo" parameterType="kr.co.sh86.user.domain.Sinbo">
	UPDATE kis_2017.jjac_survey004
	SET
		company = #{sbCompany},
		dateofest = #{sbdateOfEst},
		ceo = #{sbCeo},
		rrn = #{sbRrn},
		address = #{sbAdd},
		branch = #{sbBranch},
		josaja = #{sbJosaja},
		hp = #{sbHp},
		job = #{sbUpstream}
	WHERE
		mem_id = #{sbNum}
</update>

<!-- 문자 - 수신자 조회 -->
<select id="selectUserForMms" parameterType="Map" resultType="kr.co.sh86.user.domain.User">
	SELECT
		USER_ID,
		USER_NAME,
		USER_HP
	FROM
		SH86.SH_USER
	<trim prefix="WHERE" prefixOverrides="AND">
		<if test="userId neq null and !userId.equals('')">
			AND USER_ID LIKE #{userId}||'%'
		</if>
		<if test="userAddress neq null and !userAddress.equals('')">
			AND USER_ADDRESS LIKE '%'||#{userAddress}||'%'
		</if>
		<if test="userName neq null and !userName.equals('')">
			AND USER_NAME LIKE '%'||#{userName}||'%'
		</if>
		AND USER_HP IS NOT NULL
	</trim>		
</select>

<!-- 문자 - 수신자 전체조회 -->
<select id="selectAllUserForMms" resultType="kr.co.sh86.user.domain.User">
	SELECT
		USER_ID,
		USER_NAME,
		USER_HP
	FROM
		SH86.SH_USER
	WHERE
		USER_HP IS NOT NULL		
</select>

<!--문자발송  -->
<insert id="sendMmsToSelected" parameterType="kr.co.sh86.user.domain.Mms">
	INSERT INTO XROSHOT.SDK_MMS_SEND(
		msg_id, 
		user_id, 
		schedule_type, 
		subject, 
		now_date, 
		send_date, 
		callback, 
		dest_count, 
		dest_info, 
		mms_msg)
	VALUES(
		XROSHOT.SDK_MMS_SEQ.NEXTVAL,
		'mystat03',
		#{scheduleType},
		#{subject},
		TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
		TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
		#{callback},
		#{destCount},
		#{destInfo},
		#{mmsMsg})
</insert>

<!-- 소식 > 공지사항(부의) 등록 전 작성자 조회 -->
<select id="selectWriter" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT 
		user_id,
		user_name
	FROM 
		SH86.SH_USER
	WHERE
		user_id = #{userId}
</select>

<!-- 소식 > 공지사항(부의) 등록 -->
<insert id="insertNotice" parameterType="kr.co.sh86.user.domain.Notice">
	<selectKey keyProperty="noNum" resultType="int" order="BEFORE">
		select notice_seq.nextval FROM DUAL
	</selectKey>
	INSERT INTO SH86.SH_NOTICE(
		no_num,
		no_subject,
		no_writer,
		no_regdate,
		no_type,
		user_id
		)
	VALUES(
		#{noNum},
		#{noSubject},
		#{noWriter},
		to_char(sysdate,'YYYY-MM-DD'),
		#{noType},
		#{userId}
		)	
</insert>

<!-- 소식 > 공지사항(축하) 등록 -->
<insert id="insertNoticeCong" parameterType="kr.co.sh86.user.domain.Notice">
	INSERT INTO SH86.SH_NOTICE(
		no_num,
		no_subject,
		no_writer,
		no_regdate,
		no_type,
		user_id
		,no_contents
		,no_targetname
		,no_targetclass
		<if test="noUserHp != null and noUserHp != ''">
			,no_user_hp
		</if>)
	VALUES(
		notice_seq.nextval,
		#{noSubject},
		#{noWriter},
		to_char(sysdate,'YYYY-MM-DD'),
		#{noType},
		#{userId}
		,#{noContents}
		,#{noTargetName}
		,#{noTargetClass}
		<if test="noUserHp != null and noUserHp != ''">
			,#{noUserHp}
		</if>)	
</insert>

<!-- 소식 > 공지사항(부의) 컨텐트 등록 -->
<insert id="insertContent" parameterType="kr.co.sh86.user.domain.Content">
	<selectKey keyProperty="coNum" resultType="int" order="BEFORE">
		select content_seq.nextval FROM DUAL
	</selectKey>
	INSERT INTO SH86.SH_CONTENT(
		co_num,
		co_place,
		co_handdate,
		co_content,
		no_num,
		co_targetname,
		co_targetClass,
		co_visitdate,
		co_visithour,
		co_visitminute
		<if test="coUserHp != null and coUserHp !=''">
			,co_user_hp
		</if>
		)
	VALUES(
		#{coNum},
		#{coPlace},
		#{coHanddate},
		#{coContent},
		#{noNum},
		#{coTargetName},
		#{coTargetClass},
		#{coVisitDate},
		#{coVisitHour},
		#{coVisitMinute}
		<if test="coUserHp != null and coUserHp !=''">
			#{coUserHp}
		</if>)
</insert>

<!--소식 > 공지사항(부의) > 컨텐트등록 후 pk값 공지테이블에 수정처리 -->
<update id="updateNoticeContentNum" parameterType="kr.co.sh86.user.domain.Notice">
	UPDATE SH86.SH_NOTICE
	SET
		no_contentnum = #{noContentNum}
	WHERE
		no_num = #{noNum}
	
</update>
	
<!-- 소식 > 공지사항(행사) 행사 등록 -->
<insert id="insertEvent" parameterType="kr.co.sh86.user.domain.Event">
	<selectKey keyProperty="coNum" resultType="int" order="BEFORE">
		select event_seq.nextval FROM DUAL
	</selectKey>
	INSERT INTO SH86.SH_EVENT(
		co_num,
		co_place,
		co_eventdate,
		co_content,
		co_money,
		co_payname,
		co_payaccount,
		no_num)
	VALUES(
		#{coNum},
		#{coPlace},
		#{coEventDate},
		#{coContent},
		#{coMoney},
		#{coPayName},
		#{coPayAccount},
		#{noNum})
</insert>

<!-- 공지 > 공지목록 > 참여/불참체크 -->
<insert id="insertJoin" parameterType="kr.co.sh86.user.domain.Join">
	INSERT INTO SH86.SH_JOIN(
		jo_num,
		<if test="userId != null and userId != ''">
			user_id,
		</if>
		<if test="joDate != null and joDate != ''">
			jo_date,
		</if>
		jo_joinshape,
		<if test="joMoney !=null and joMoney != ''">
			jo_money,
		</if>
		jo_regdate,
		<if test="joPayType !=null and joPayType != ''">
			jo_paytype,
		</if>
		no_num)
	VALUES(
		join_seq.nextval,
		<if test="userId != null and userId != ''">
		#{userId},
		</if>
		<if test="joDate != null and joDate != ''">
			#{joDate},
		</if>
		#{joJoinShape},
		<if test="joMoney !=null and joMoney != ''">
			#{joMoney},
		</if>
		to_char(sysdate,'YYYY-MM-DD'),
		<if test="joPayType !=null and joPayType != ''">
			#{joPayType},
		</if>
		#{noNum})	
</insert>

<select id="sinboLast" resultType="kr.co.sh86.user.domain.Sinbo">
	SELECT 
		SB_NUM, 
		SB_CEO, 
		SB_HP	
	FROM ADMIN.SINBO 
	WHERE 
		SB_ORDERCOUNT = 2 
	AND SB_RESCHECK='미응답' 
	AND SB_REJECT=0 
	AND SB_ARSRESULT IS NOT NULL
</select>

<select id="selectUserIdAll" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_id
	FROM
		SH86.SH_USER
</select>

<update id="updateOldImg" parameterType="kr.co.sh86.user.domain.User">
	UPDATE
		SH86.SH_USER
	SET
		USER_IMG_OLD = #{userImgOld}
	WHERE
		USER_ID = #{userId}
</update>

<!-- 회원사이트 접속확인 카운팅 > 조회 -->
<select id="selectUserById" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_id,
		user_joincheck
	FROM
		SH86.SH_USER
	WHERE
		user_id = #{userId}
</select>

<!-- 회원사이트 접속확인 카운팅 > 카운팅 -->
<update id="updateUserConnection" parameterType="kr.co.sh86.user.domain.User">
	UPDATE
		SH86.SH_USER
	SET
		USER_JOINCHECK = #{userJoinCheck},
		USER_LASTDATE = to_char(sysdate,'yyyy-mm-dd')
	WHERE
		USER_ID = #{userId}
</update>

<!-- 친구 > 회원검색(이름) -->
<select id="selectUserByUserName" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM
		SH86.SH_USER
	WHERE
		user_name LIKE '%'||#{userName}||'%'
	OR
		user_cityname LIKE '%'||#{userName}||'%'
	ORDER BY user_id
</select>

<!-- 친구 > 회원검색(이름) -->
<select id="selectUserByClass" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_id,
		user_name,
		user_do,
		user_cityname,
		user_job,
		user_hp,
		user_img_pass,
		user_img_old,
		user_img_new,
		user_joincheck,
		mmscheck
	FROM
		SH86.SH_USER
	WHERE
		user_id LIKE #{classNum}||'%'
	ORDER BY user_name
</select>

<!-- 마이페이지 > 개인정보조회 -->
<select id="selectUserByCookieId" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM
		SH86.SH_USER
	WHERE
		user_Id = #{userId}
</select>

<!-- 마이페이지 > 새로운 사진등록 -->
<update id="updateUserImgNew" parameterType="kr.co.sh86.user.domain.User">
	UPDATE
		SH86.SH_USER
	SET
		USER_IMG_NEW = #{userImgNew}
	WHERE
		USER_ID = #{userId}
</update>

<!-- 마이페이지 > 회원정보수정 -->
<update id="updateUserInfo" parameterType="kr.co.sh86.user.domain.User">
	UPDATE
		SH86.SH_USER
	SET
		USER_HP = #{userHp}
		<if test="userAddress != null and userAddress != ''">
			,USER_ADDRESS = #{userAddress}
			,USER_DO = #{userDo}
			,USER_CITYNAME = #{userCityName} 
		</if>
		<if test="userBirthType != null and userBirthType != ''">
			,USER_BIRTH_TYPE = #{userBirthType}
		</if>
		<if test="userBirth != null and userBirth != ''">
			,USER_BIRTH = #{userBirth}
		</if>
		<if test="userBirthMonth != null and userBirthMonth != ''">
			,USER_BIRTH_MONTH = #{userBirthMonth}
		</if>
		<if test="userBirthDay != null and userBirthDay != ''">
			,USER_BIRTH_DAY = #{userBirthDay}
		</if>
		<if test="userSangseAdd != null and userSangseAdd != ''">
			,USER_SANGSEADD = #{userSangseAdd}
		</if>
		<if test="mmsCheck != null and mmsCheck !=''">,MMSCHECK=#{mmsCheck}</if>
	WHERE
		USER_ID = #{userId}
</update>

<!--일상등록  -->
<insert id="insertAlbum" parameterType="kr.co.sh86.user.domain.Album">
	<selectKey keyProperty="albumNo" resultType="int" order="BEFORE">
		select album_seq.nextval FROM DUAL
	</selectKey>
	INSERT INTO SH86.SH_ALBUM(
		album_no,
		album_msg,
		user_id,
		album_regdate)
	VALUES(
		#{albumNo},
		#{albumMsg},
		#{userId},
		to_char(sysdate,'YYYY-MM-DD')
		)
</insert>

<!--일상등록 > 파일정보등록  -->
<insert id="insertAlbumPhoto" parameterType="kr.co.sh86.user.domain.UploadFileDTO">
	INSERT INTO SH86.SH_PHOTO(
		file_no,
		file_originalname,
		file_path,
		file_name
		<if test="albumNo !=null and albumNo != ''">,album_no</if>
		<if test="photoType !=null and photoType != ''">,photo_type</if>
		)
	VALUES(
		PHOTO_SEQ.NEXTVAL,
		#{fileOriginalName},
		#{filePath},
		#{fileName}
		<if test="albumNo !=null and albumNo != ''">,#{albumNo}</if>
		<if test="photoType !=null and photoType != ''">,#{photoType}</if>
		)
	
</insert>

<!-- 일상 글조회 -->
<select id="selectAllAlbum" resultType="kr.co.sh86.user.domain.Album">
	SELECT 
		al.*,
		us.user_name,
		us.user_hp,
		us.user_img_old,
		us.user_img_new
	FROM
		SH86.SH_ALBUM al,
		SH86.SH_USER us
	WHERE
		al.user_id = us.user_id
	ORDER BY al.album_no DESC
</select>

<!--일상에 딸린 사진조회  -->
<select id="selectPhotoForAlbum" parameterType="int" resultType="kr.co.sh86.user.domain.UploadFileDTO">
	SELECT
		file_no,
		file_name,
		album_no,
		file_path
	FROM
		SH86.SH_PHOTO
	WHERE
		album_no = #{albumNo}
</select>

<!-- 일상 > 좋아요체크 -->
<insert id="insertGoodByAlbum" parameterType="kr.co.sh86.user.domain.GoodCheck">
	INSERT INTO SH86.SH_GOODCHECK(
		good_num,
		user_id
		<if test="albumNo != null and albumNo != ''">
			,album_no
		</if>
		<if test="fileNo != null and fileNo != ''">
			,file_no
		</if>
		)
	VALUES(
		GOODCHECK_SEQ.NEXTVAL,
		#{userId}
		<if test="albumNo != null and albumNo != ''">
			,#{albumNo}
		</if>
		<if test="fileNo != null and fileNo != ''">
			,#{fileNo}
		</if>)		
</insert>

<!-- 좋아요 체크했는지 검색 -->
<select id="selectGoodCheckByUser" parameterType="kr.co.sh86.user.domain.GoodCheck" resultType="int">
	SELECT
		COUNT(*)
	FROM
		SH86.SH_GOODCHECK
	WHERE
		user_id = #{userId}
	<if test="albumNo != null and albumNo != ''">
		AND
			album_no = #{albumNo}
	</if>
	<if test="fileNo != null and fileNo != ''">
		AND
			file_no = #{fileNo}
	</if>
</select>

<!-- 앨범테이블에 좋아요 카운트++ -->
<update id="updateAlbumGoodCount" parameterType="kr.co.sh86.user.domain.Album">
	UPDATE
		SH86.SH_ALBUM
	SET
		album_good = #{albumGood}
	WHERE
		album_no = #{albumNo}
</update>

<!--댓글등록  -->

<!-- 포토테이블에 좋아요 카운트++ -->
<update id="updatePhotoGoodCount" parameterType="kr.co.sh86.user.domain.UploadFileDTO">
	UPDATE
		SH86.SH_PHOTO
	SET
		photo_goods = #{photoGoods}
	WHERE
		file_no = #{fileNo}
</update>

<!--댓글등록  -->
<insert id="insertAlbumComment" parameterType="kr.co.sh86.user.domain.Comment">
	<selectKey keyProperty="comNum" resultType="int" order="BEFORE">
		select COMMENT_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO SH86.SH_COMMENT(
		com_num,
		com_content,
		com_regdate,
		user_id
		<if test="albumNo != null and albumNo != ''">
			,album_no
		</if>
		<if test="photoType != null and photoType != ''">
			,photo_type
		</if>
		<if test="fileNo != null and fileNo != ''">
			,file_no
		</if>
		)
	VALUES(
		#{comNum},
		#{comContent},
		TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),
		#{userId}
		<if test="albumNo != null and albumNo != ''">
			,#{albumNo}
		</if>
		<if test="photoType != null and photoType != ''">
			,#{photoType}
		</if>
		<if test="fileNo != null and fileNo != ''">
			,#{fileNo}
		</if>)
</insert>

<!-- 댓글조회 -->
<select id="selectAllAlbumComment" parameterType="int" resultType="kr.co.sh86.user.domain.Comment">
	SELECT 
		co.com_num,
		co.com_content,
		co.com_regdate,
		co.user_id,
		us.user_img_old,
		us.user_img_new,
		us.user_name
	FROM
		SH86.SH_COMMENT co,
		SH86.SH_USER us
	WHERE
		co.album_no = #{albumNo}
	AND
		co.user_id = us.user_id
	ORDER BY com_num 
</select>

<!-- 방금 입력된 댓글조회 -->
<select id="selectAlbumComment" parameterType="int" resultType="kr.co.sh86.user.domain.Comment">
	SELECT 
		co.com_num,
		co.com_content,
		co.com_regdate,
		co.user_id,
		us.user_img_old,
		us.user_img_new,
		us.user_name
	FROM
		SH86.SH_COMMENT co,
		SH86.SH_USER us
	WHERE
		co.user_id = us.user_id
  	AND
		co.com_num = #{comNum}
</select>

<!-- 일상 > 글삭제 -->
<delete id="deleteAlbumByAlbumNo" parameterType="int">
	DELETE
	FROM
		SH86.SH_ALBUM
	WHERE
		album_no = #{albumNo}
</delete>

<!-- 일상 > 댓글삭제(글삭제시 전체삭제) -->
<delete id="deleteCommentByAlbumNo" parameterType="int">
	DELETE
	FROM
		SH86.SH_COMMENT
	WHERE
		album_no = #{albumNo}
</delete>

<!--일상 > 글수정  -->
<update id="updateAlbum" parameterType="kr.co.sh86.user.domain.Album">
	UPDATE
		SH86.SH_ALBUM
	SET
		album_msg = #{albumMsg}
	WHERE
		album_no = #{albumNo}
</update>

<!-- 행사공지 조인카운트 -->
<select id="selectEventJoinCount" parameterType="kr.co.sh86.user.domain.Join" resultType="int">
	SELECT
		COUNT(*)
	FROM 
		SH86.SH_JOIN
	WHERE
		NO_NUM = #{noNum}
	<if test="joJoinShape != null and joJoinShape != ''">
	AND
		JO_JOINSHAPE = '참여'
	</if>
	
	<if test="userId != null and userId != ''">
		AND user_id = #{userId}
	</if>
</select>

<!-- 행사공지 불참카운트 -->
<select id="selectEventNotJoinCount" parameterType="kr.co.sh86.user.domain.Join" resultType="int">
	SELECT
		COUNT(*)
	FROM 
		SH86.SH_JOIN
	WHERE
		JO_JOINSHAPE = '불참'
	AND
		NO_NUM = #{noNum}
	<if test="userId != null and userId != ''">
		AND user_id = #{userId}
	</if>
</select>

<!-- 공지 > 글삭제 -->
<delete id="deleteNotice" parameterType="int">
	DELETE
	FROM
		SH86.SH_NOTICE
	WHERE
		NO_NUM = #{noNum}
</delete>

<!--공지 > 행사공지글수정 > 수정할 공지 조회 -->
<select id="selectNoticeEventByNoNum" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*,
		ev.*
	FROM 
		SH86.SH_NOTICE no,
		SH86.SH_EVENT ev
	WHERE
		no.no_num = ev.no_num
	AND
		no.no_num = #{noNum}		
</select> 

<!--공지 > 부의공지글수정 > 수정할 공지 조회 -->
<select id="selectNoticeContentByNoNum" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*,
		co.*
	FROM 
		SH86.SH_NOTICE no,
		SH86.SH_CONTENT co
	WHERE
		no.no_num = co.no_num
	AND
		no.no_num = #{noNum}		
</select> 

<!--공지 > 축하공지글수정 > 수정할 공지 조회 -->
<select id="selectNoticeByNoNum" parameterType="int" resultType="kr.co.sh86.user.domain.NoticeView">
	SELECT
		no.*
	FROM 
		SH86.SH_NOTICE no
	WHERE
		no.no_num = #{noNum}		
</select> 

<!-- 공지 > 공지 수정 -->
<update id="updateNotice" parameterType="kr.co.sh86.user.domain.NoticeView">
	UPDATE
		SH86.SH_NOTICE
	SET
		no_subject = #{noSubject}
		<if test="noType eq 3">
			,no_contents = #{noContents}
			,no_targetclass = #{noTargetClass}
			,no_targetName = #{noTargetName}
		</if>
	WHERE
		no_num = #{noNum}
</update>

<!-- 공지 > 행사공지 수정 -->
<update id="updateEventNotice" parameterType="kr.co.sh86.user.domain.NoticeView">
	UPDATE
		SH86.SH_EVENT
	SET
		co_place = #{coPlace},
		co_eventdate = #{coEventDate},
		co_content = #{coContent},
		co_money = #{coMoney}
	WHERE
		no_num = #{noNum}
</update>

<!-- 공지 > 부의공지 수정  -->
<update id="updateContentNotice" parameterType="kr.co.sh86.user.domain.NoticeView">
	UPDATE
		SH86.SH_CONTENT
	SET
		co_place = #{coPlace},
		co_handdate = #{coHanddate},
		co_content = #{coContent},
		co_targetclass = #{coTargetClass},
		co_targetName = #{coTargetName},
		co_visitdate = #{coVisitDate},
		co_visitHour = #{coVisitHour},
		co_visitminute = #{coVisitMinute}
	WHERE
		no_num = #{noNum}
</update>

<!-- 앨범 > 등록자이름으로 조회 -->
<select id="selectAlbumByUserName" parameterType="String" resultType="kr.co.sh86.user.domain.Album">
	SELECT 
		al.*,
		us.user_name,
		us.user_hp,
		us.user_img_old,
		us.user_img_new
	FROM
		SH86.SH_ALBUM al,
		SH86.SH_USER us
	WHERE
		al.user_id = us.user_id
	AND
		us.user_name LIKE '%'||#{userName}||'%'
	ORDER BY al.album_no DESC		
</select>

<!-- 공지대상자 폰번호 조회(부의) -->
<select id="selectUserInfoByContent" parameterType="kr.co.sh86.user.domain.Content" resultType="String">
	SELECT
		user_hp
	FROM
		SH86.SH_USER
	WHERE
		user_name = #{coTargetName}
	AND
		user_id like #{coTargetClass}||'%'
		
</select>

<!-- 공지대상자 폰번호 조회(축하) -->
<select id="selectUserInfoByNotice" parameterType="kr.co.sh86.user.domain.Notice" resultType="String">
	SELECT
		user_hp
	FROM
		SH86.SH_USER
	WHERE
		user_name = #{noTargetName}
	AND
		user_id like #{noTargetClass}||'%'
		
</select>

<!--포토 > 카테고리별 파일명,경로 조회 -->
<select id="selectFileInfoByPhotoType" parameterType="int" resultType="kr.co.sh86.user.domain.UploadFileDTO">
	SELECT
		*
	FROM
		SH86.SH_PHOTO
	WHERE
		photo_type= #{photoType}
	ORDER BY FILE_NO
</select>

<!--포토 > 카테고리별 파일명,경로 조회2 -->
<select id="selectFileInfoByPhotoTypeAndFolder" parameterType="Map" resultType="kr.co.sh86.user.domain.UploadFileDTO">
	SELECT
		*
	FROM
		SH86.SH_PHOTO
	WHERE
		photo_type= #{photoType}
	AND
		file_path Like '%'||#{folderName}||'%'
	ORDER BY FILE_NO
</select>

<!--포토 > 댓글조회  -->
<select id="selectPhotoCommentByPhotoType" parameterType="Map" resultType="kr.co.sh86.user.domain.Comment">
	SELECT
		co.*,
		us.user_img_old,
		us.user_img_new,
		us.user_name
	FROM
		SH86.SH_COMMENT co,
		SH86.SH_USER us
	WHERE
		co.user_id = us.user_id
	AND
		photo_type = #{photoType}
	AND 
		co.file_no = #{fileNo}
</select>

<!-- 포토 > 댓글등록 -->
<insert id="insertPhotoComment" parameterType="kr.co.sh86.user.domain.Comment">
	INSERT INTO SH86.SH_COMMENT(
		com_num,
		com_content,
		com_regdate,
		user_id,
		photo_type)
	VALUES(
		COMMENT_SEQ.NEXTVAL,
		#{comContent},
		TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),
		#{userId},
		#{photoType})
</insert>

<!-- 공지대상자 사진 조회(부의) -->
<select id="selectUserImgByContent" parameterType="kr.co.sh86.user.domain.NoticeView" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_img_old,
		user_img_new
	FROM
		SH86.SH_USER
	WHERE
		user_name = #{coTargetName}
	AND
		user_id like #{coTargetClass}||'%'
		
</select>

<!-- 공지대상자 사진 조회(축하) -->
<select id="selectUserImgByCong" parameterType="kr.co.sh86.user.domain.NoticeView" resultType="kr.co.sh86.user.domain.User">
	SELECT
		user_img_old,
		user_img_new
	FROM
		SH86.SH_USER
	WHERE
		user_name = #{noTargetName}
	AND
		user_id like #{noTargetClass}||'%'		
</select>

<!-- 관리 - 이용(접속현황) -->
<select id="selectUserConnection" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM 
		SH86.SH_USER
	WHERE
		user_id LIKE #{classNum}||'%'
	ORDER BY user_name
</select>

<!-- 관리 - 회비2017(반 별 합계) -->
<select id="selectUserDuesSum" parameterType="String" resultType="int">
	SELECT
		SUM(user_dues2017)
	FROM
		SH86.SH_USER
	WHERE
		user_id LIKE #{classNum}||'%'
</select> 

<!-- 관리 - 30th(반 별 합계) -->
<select id="selectUser30thSum" parameterType="String" resultType="int">
	SELECT
		SUM(user_30th)
	FROM
		SH86.SH_USER
	WHERE
		user_id LIKE #{classNum}||'%'
</select> 

<!-- 관리 - 30th기부(반 별 합계) -->
<select id="selectUser30thKibuSum" parameterType="String" resultType="int">
	SELECT
		SUM(user_30thkibu)
	FROM
		SH86.SH_USER
	WHERE
		user_id LIKE #{classNum}||'%'
</select> 

<!-- 스케줄러 > 생일인사람 일상 글 올려주기 -->
<!-- 생일자 회원검색 -->
<select id="selectUserBirthday" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM
		SH86.SH_USER
	WHERE
		USER_BIRTH = #{birthDay}
</select>

<!-- 일상 > 댓글삭제 -->
<delete id="deleteCommentByComNum" parameterType="int">
	DELETE 
	FROM
		SH86.SH_COMMENT
	WHERE
		COM_NUM = #{comNum}
</delete>

<!-- 공지 > 행사 참여자조회 -->
<select id="selectUserByEventJoin" parameterType="int" resultType="kr.co.sh86.user.domain.User">
	SELECT
		us.*,
		jo.jo_joinshape
	FROM
		SH86.SH_USER us,
		SH86.SH_JOIN jo
	WHERE
		us.user_id = jo.user_id
	AND
		jo.no_num = #{noNum}	
</select>

<!--포토 > 사진확대  -->
<select id="selectPhotoBigger" parameterType="int" resultType="kr.co.sh86.user.domain.UploadFileDTO">
	SELECT
		*
	FROM
		SH86.SH_PHOTO
	WHERE
		file_no = #{fileNo}
</select>

<!-- 포토 > 사진삭제 -->
<delete id="deletePhoto" parameterType="int">
	DELETE
	FROM
		SH86.SH_PHOTO
	WHERE
		file_no = #{fileNo}
</delete>

<!-- 문자발송자 조회 -->
<select id="selectUserMmsTaken" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		DEST_NAME,
		PHONE_NUMBER,
		RESULT
	FROM
		XROSHOT.SDK_MMS_REPORT_DETAIL
	WHERE
		SEND_DATE >= #{sendDate}
</select>

<!-- 월별 문자발송 건수등 확인  -->
<select id="selectCountMmsByMonth" resultType="int">
	SELECT
		count(*)
	FROM
		XROSHOT.SDK_MMS_REPORT
	WHERE
		SUBJECT LIKE '신흥고'||'%'
	AND 
		SEND_DATE LIKE #{sendDate}||'%'
</select>

<!-- 문자발송자 성공카운트조회 -->
<select id="selectUserMmsTakenSuccess" parameterType="String" resultType="int">
	SELECT
		COUNT(*)
	FROM
		XROSHOT.SDK_MMS_REPORT_DETAIL
	WHERE
		SEND_DATE LIKE #{sendDate}||'%'
	AND
		RESULT = 2
</select>

<!--단체문자 전송 기록 입력  -->
<insert id="insertMmsReport" parameterType="kr.co.sh86.user.domain.MmsReport">
	INSERT INTO SH86.SH_MMS_REPORT(
		mms_no,
		mms_senddate,
		mms_totalcount,
		mms_success,
		mms_sender,
		mms_msg)
	VALUES(
		mmsreport_seq.nextval,
		#{mmsSendDate},
		#{mmsTotalCount},
		#{mmsSuccess},
		#{mmsSender},
		#{mmsMsg})
</insert>

<!-- 문자발송 이력조회 월별 -->
<select id="selectReportByMonth" parameterType="String" resultType="kr.co.sh86.user.domain.MmsReport">
	SELECT
		*
	FROM 
		SH86.SH_MMS_REPORT
	WHERE
		mms_senddate LIKE #{sendDate}||'%'
	ORDER BY MMS_NO DESC
</select>

<!-- 문자발송 이력조회  -->
<select id="selectReportByMmsNo" parameterType="int" resultType="kr.co.sh86.user.domain.MmsReport">
	SELECT
		*
	FROM 
		SH86.SH_MMS_REPORT
	WHERE
		mms_no = #{mmsNo}
</select>

<select id="selectCountConnectByMms" parameterType="Map" resultType="int">
	SELECT
		COUNT(*)
	FROM 
		SH86.SH_USER
	WHERE
		USER_LASTDATE &gt;= #{startDate} 
</select>

<!-- 문자발송 시간대기준 상세발송성공여부 확인 -->
<select id="selectUserSuccessByDateTime" parameterType="String" resultType="kr.co.sh86.user.domain.User">
	SELECT
		DEST_NAME,
		PHONE_NUMBER,
		RESULT,
		SEND_DATE
	FROM
		XROSHOT.SDK_MMS_REPORT_DETAIL
	WHERE
		SEND_DATE LIKE #{sendDate}||'%'
	
</select>

<!-- 문자발송후 이상번호 체크 -->
<update id="updateMmsCheck" parameterType="kr.co.sh86.user.domain.User">
	UPDATE SH86.SH_USER
	SET
		MMSCHECK = #{mmsCheck}
		<if test="mmsSendDate !=null and mmsSendDate !=''">,MMS_SENDDATE = #{mmsSendDate}</if>
	WHERE
		USER_ID = #{userId}
</update>

<!-- 유저아이디 조회  -->
<select id="selectUserId" parameterType="kr.co.sh86.user.domain.User" resultType="kr.co.sh86.user.domain.User">
	SELECT
		USER_ID,
		MMSCHECK,
		MMS_SENDDATE,
		USER_LASTDATE
	FROM
		SH86.SH_USER
	WHERE
		USER_NAME = #{destName}
	<if test="phoneNumber != null and phoneNumber !=''">AND USER_HP = #{phoneNumber}</if>	
</select>

<!-- 유저 조회  -->
<select id="selectUserByMmsRetry" parameterType="kr.co.sh86.user.domain.User" resultType="kr.co.sh86.user.domain.User">
	SELECT
		*
	FROM
		SH86.SH_USER
	WHERE
		USER_NAME = #{destName}
	<if test="phoneNumber != null and phoneNumber !=''">AND USER_HP = #{phoneNumber}</if>	
</select>

<!-- 유저 새이미지명 조회 -->
<select id="selectNewImgName" parameterType="String" resultType="String">
	SELECT
		user_img_new
	FROM 
		SH86.SH_USER
	WHERE
		user_id = #{userId}
</select>

<!-- 사진제목 리스트 조회 -->
<select id="selectPhotoList" resultType="kr.co.sh86.user.domain.PhotoList">
	SELECT
		*
	FROM
		SH86.SH_PHOTOLIST
	ORDER BY SH_LIST_NO DESC
</select>

<!-- 목록타입 최종값 조회 -->
<select id="selectPhotoListType" resultType="int">
 	SELECT
 		MAX(sh_list_type)
 	FROM
 		SH86.SH_PHOTOLIST
</select>

<!-- 사진목록 등록 -->
<insert id="insertPhotoList" parameterType="kr.co.sh86.user.domain.PhotoList">
	INSERT INTO SH86.SH_PHOTOLIST(
		sh_list_no,
		sh_list_subject
		<if test="shListDate != null and shListDate != ''">,sh_list_date</if>
		,sh_list_type)
	VALUES(
		SH_PHOTOLIST_SEQ.NEXTVAL,
		#{shListSubject}
		<if test="shListDate != null and shListDate != ''">,#{shListDate}</if>
		,#{shListType})
</insert>

<!-- 사진목록 삭제 -->
<delete id="deletePhotoList" parameterType="int">
	DELETE
	FROM
		SH86.SH_PHOTOLIST
	WHERE
		SH_LIST_NO = #{shListNo}
</delete>

<!-- 로그인 -->
<select id="selectLoginInfo" parameterType="Map" resultType="kr.co.sh86.user.domain.User">
	SELECT *
	FROM SH86.SH_USER
	WHERE user_id like #{userClass}||'%'
	AND user_name = #{userName}
</select>

<!-- 토큰저장 -->
<update id="updateToken" parameterType="kr.co.sh86.user.domain.User">
	UPDATE SH86.SH_USER
	SET token = #{token}
	WHERE user_id = #{userId}
</update>

<!-- 토큰조회 -->
<select id="selectTokenAll" resultType="String">
	SELECT token
	FROM SH86.SH_USER
	WHERE token is not null
</select>

</mapper>